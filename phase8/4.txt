SELECT COUNT(*)
FROM quiz e, quiz_game c, quiz_record erd
WHERE e.quizID = c.quizID
AND e.quizID = erd.quizID
AND e.yearsAtCompany > 5; 

--Possible execution plans--
--(quiz ✶ quiz_record) ✶ question
SELECT COUNT(*) 
FROM question p JOIN (quiz e JOIN quiz_record er ON e.quizID = er.quizID)
            ON p.quizID = e.quizID AND p.questionID = 100;

--(question ✶ quiz) ✶ quiz_record
SELECT COUNT(*) 
FROM quiz_record er JOIN (question p JOIN quiz e ON p.quizID = e.quizID AND p.questionID = 100)
            ON e.quizID = er.quizID;

--(question ✶ quiz_record) ✶ quiz
SELECT COUNT(*) 
FROM quiz e JOIN (question p JOIN quiz_record er ON p.questionID = 100)
            ON e.quizID = er.quizID AND p.quizID = e.quizID;

--Join cardinalities--
(quiz ✶ quiz_record) ✶ question (5614 + 1) = 5615 tuples
--TIME FOR testQuery: 0.002000570297241211 seconds
(question ✶ quiz) ✶ quiz_record (1 + 1) = 2 tuples
--TIME FOR testQuery: 0.0019958019256591797 seconds
(question ✶ quiz_record) ✶ quiz (1 + 1) = 2 tuples
--TIME FOR testQuery: 0.0020003318786621094 seconds

--here will be the same as in the our 3rd query

--Analyze 
--We decided that query 2 is the fastest and most efficient, although for passing tuples 2 and 3 of the same calculation time, query 2 wins.